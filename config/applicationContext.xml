<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    <!-- 加载配置文件 -->          
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 指定连接数据库的JDBC驱动(从配置文件中获取) -->
		<property name="driverClassName" value ="${datasource.driverClassName}"> </property>
        <property name="url" value="${datasource.url}"></property>
        <property name="username" value = "${datasource.username}"></property>
        <property name="password" value="${datasource.password}"> </property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>						
			</props>
		</property>
		<!-- 扫描hibernate带注解的实体类 -->
		<property name="packagesToScan" value="com.gxl.entity"/>
	</bean>
	
	<!-- 声明Hibernate事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
	<!-- 定义事务通知  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">	 
	  <!-- 指定事务传播规则 -->
		<tx:attributes>
			<!-- 对tx开头的方法，当抛出异常时回滚 -->
	        <tx:method name="tx*" rollback-for="Exception" />
			<!-- 对所有方法应用REQUIRED事务规则 -->
		    <tx:method name="*" propagation="REQUIRED"></tx:method>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 定义切面，并将事务通知和切面组合（定义哪些方法应用事务规则）-->
	<aop:config>   
		<!-- 对com.ssh2.biz包下的所有类的所有方法都应用事务规则 -->
		<aop:pointcut id="bizMethods" expression="execution(* com.gxl.*.impl.*.*(..))" />     
		<!-- 将事务通知和切面组合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethods" />
	</aop:config>
	
	<!-- 开启注解处理器 -->
	<context:annotation-config />
	
	<!-- 开启Spring的Bean自动扫描机制来检查与管理Bean实例 -->
	<context:component-scan base-package="com.gxl" />
</beans>                        